# ============================================================
# GitHub Actions Workflow: Build and Push Node.js App to ACR
# ============================================================
# Purpose:
#  - Triggered on push to "QA" branch
#  - Builds a Docker image for Node.js app
#  - Pushes the image to Azure Container Registry (ACR)
# ============================================================

name: Build and Push Node.js App to ACR

# ----------------------------
# Trigger section
# ----------------------------
on:
  push:
    branches:
      - QA   # Runs pipeline only when code is pushed to QA branch

# ----------------------------
# Jobs section
# ----------------------------
jobs:
  build-and-push:
    runs-on: ubuntu-latest    # GitHub-hosted runner (Linux environment)

    # ----------------------------
    # Environment variables
    # ----------------------------
    env:
      ACR_NAME: azracrftdmpcdev       # Your Azure Container Registry name (without .azurecr.io)
      IMAGE_NAME: pipetest # Name for your Docker image
      NODE_ENV: qa                    # Environment label (QA in this case)

    # ----------------------------
    # Steps in the job
    # ----------------------------
    steps:
      # Step 1: Checkout repository code
      - name: Checkout source code
        uses: actions/checkout@v4

    # Step 2: Set up Python (for linting)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install Pylint
      - name: Install Pylint
        run: pip install pylint

      # Step 4: Run Pylint
      - name: Run Pylint
        run: |
          echo "üîç Running pylint..."
          pylint app/ || true
        # üëÜ use `|| true` if you want warnings but don't want pipeline to fail
        # remove `|| true` if you want pipeline to fail on lint errors

      # Step 5: Log in to Azure Container Registry (ACR)
      - name: Log in to Azure ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io  # ACR login server
          username: ${{ secrets.ACR_USERNAME }}         # ACR username (set in GitHub Secrets)
          password: ${{ secrets.ACR_PASSWORD }}         # ACR password/token (set in GitHub Secrets)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/bob/${{ env.IMAGE_NAME }}/${{ env.NODE_ENV }}:${{ github.sha }}
     # Print the actual image digest (unique immutable ID)
      - name: image information
        run: |
          echo "‚úÖ Image pushed successfully!"
          echo "Commit Image: ${{ env.ACR_NAME }}.azurecr.io/bob/${{ env.IMAGE_NAME }}/${{ env.NODE_ENV }}:${{ github.sha }}"

